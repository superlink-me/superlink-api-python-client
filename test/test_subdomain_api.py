# coding: utf-8

"""
    Superlink

    API for Superlink

    The version of the OpenAPI document: v0.4.2
    Contact: support@superlink.me
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from superlink.api.subdomain_api import SubdomainApi


class TestSubdomainApi(unittest.TestCase):
    """SubdomainApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SubdomainApi()

    def tearDown(self) -> None:
        pass

    def test_parentdomain_purchase(self) -> None:
        """Test case for parentdomain_purchase

        Purchases and sets up a parent domain for use with ens subdomains
        """
        pass

    def test_parentdomain_search(self) -> None:
        """Test case for parentdomain_search

        Returns a list of available parent-domains provided the preferred parent ddomain
        """
        pass

    def test_parentdomain_validation(self) -> None:
        """Test case for parentdomain_validation

        Validates if parent domain is correctly configured for use with ens subdomains
        """
        pass

    def test_subdomain_available(self) -> None:
        """Test case for subdomain_available

        Returns subdomain availability
        """
        pass

    def test_subdomain_claimed(self) -> None:
        """Test case for subdomain_claimed

        Returns subdomain availability
        """
        pass

    def test_subdomain_list(self) -> None:
        """Test case for subdomain_list

        Paginates over all subdomains in descending order of the creation date
        """
        pass

    def test_subdomain_mint(self) -> None:
        """Test case for subdomain_mint

        Creates a subdomain for provided parentdomain
        """
        pass

    def test_subdomain_mint_sig(self) -> None:
        """Test case for subdomain_mint_sig

        Creates a subdomain for provided parentdomain with signature
        """
        pass

    def test_subdomain_per_day(self) -> None:
        """Test case for subdomain_per_day

        Paginates over per-day aggregated counts for subdomains created given a parentdomain
        """
        pass

    def test_subdomain_resolve(self) -> None:
        """Test case for subdomain_resolve

        Returns resolution of a provided subdomain
        """
        pass

    def test_subdomain_reverse_resolve(self) -> None:
        """Test case for subdomain_reverse_resolve

        Returns reverse-resolution of a provided eth address limited to provided parentdomain
        """
        pass

    def test_subdomain_revoke(self) -> None:
        """Test case for subdomain_revoke

        Deletes a subdomain for provided parentdomain (Omnipotent)
        """
        pass

    def test_subdomain_total(self) -> None:
        """Test case for subdomain_total

        Returns the total number of subdomains registered to parentdomain
        """
        pass


if __name__ == '__main__':
    unittest.main()
